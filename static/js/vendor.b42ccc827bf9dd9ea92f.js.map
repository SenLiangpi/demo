{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/swiper/dist/js/swiper.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/vue-amx/lib/axm.umd.min.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js"],"names":["inspectMp4","textifyMp4","parseType","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parse","avc1","data","view","DataView","buffer","byteOffset","byteLength","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","i","result","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","push","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","length","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","type","end","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","implementation","trim","findBox","startTime","getVideoTrackIds","toUnsigned","path","subresults","results","concat","init","reduce","id","fragment","trafs","baseTimes","apply","scale","Infinity","min","isFinite","videoTrackIds","forEach","hdlrs","tkhds","warn","condition","message","isError","err","indexOf","extend","a","b","View","functional","props","default","render","_","ref","children","parent","routerView","h","$createElement","route","$route","cache","_routerViewCache","inactive","_routerRoot","vnodeData","$vnode","keepAlive","_inactive","$parent","routerViewDepth","matched","component","components","registerRouteInstance","vm","val","current","instances","hook","prepatch","vnode","componentInstance","propsToPass","params","undefined","resolveProps","attrs","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","commaRE","encode","str","encodeURIComponent","replace","decode","parseQuery","query","res","param","parts","shift","isArray","stringifyQuery","obj","val2","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","options","clone","e","meta","hash","fullPath","getFullPath","unshift","formatMatch","freeze","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","every","aVal","bVal","_Vue","toTypes","eventTypes","Link","to","required","exact","Boolean","append","activeClass","exactActiveClass","event","this$1","this","$router","resolve","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","target","queryIncludes","isIncludedRoute","handler","guardEvent","on","click","class","findAnchor","child","$slots","isStatic","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","getAttribute","test","preventDefault","install","Vue","installed","isDef","registerInstance","callVal","$options","_parentVnode","mixin","beforeCreate","_router","util","defineReactive","history","destroyed","defineProperty","get","_route","strats","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","created","inBrowser","window","resolvePath","relative","base","firstChar","charAt","stack","pop","segments","segment","cleanPath","isarray","arr","pathToRegexp_1","pathToRegexp","parse_1","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","tokens","defaultDelimiter","delimiter","exec","m","escaped","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","toUpperCase","matches","opts","pretty","token","TypeError","j","attachKeys","re","sensitive","strict","endsWithDelimiter","groups","source","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","create","fillParams","routeMsg","filler","pathMatch","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","beforeEnter","childMatchAs","alias","aliases","aliasRoute","l","splice","normalizeLocation","raw","_normalized","rawPath","parsedPath","hashIndex","queryIndex","parsePath","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","hasOwnProperty","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","len","positionStore","setupScroll","replaceState","getStateKey","origin","addEventListener","saveScrollPosition","state","_key","handleScroll","from","isPop","app","behavior","scrollBehavior","$nextTick","position","getScrollPosition","shouldScroll","then","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","isObject","selector","el","document","querySelector","docRect","documentElement","getBoundingClientRect","elRect","left","top","getElementPosition","scrollTo","ua","supportsPushState","navigator","userAgent","Time","performance","now","genKey","toFixed","pushState","url","runQueue","queue","fn","cb","step","resolveAsyncComponents","hasAsync","pending","error","flatMapComponents","def","cid","once","resolvedDef","__esModule","hasSymbol","Symbol","toStringTag","resolved","reject","reason","msg","Error","comp","flatten","called","args","arguments","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","bind","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","console","max","updated","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","cbs","isValid","poll","_isBeingDestroyed","setTimeout","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","supportsScroll","initLocation","getLocation","__proto__","constructor","go","n","fromRoute","getCurrentLocation","decodeURI","pathname","search","HashHistory","fallback","checkFallback","ensureSlash","setupListeners","getHash","replaceHash","pushHash","searchIndex","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","mode","prototypeAccessors","configurable","registerHook","list","$once","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","createHref","normalizedTo","defineProperties","use","__webpack_exports__","hasSymbols","toStr","origDefineProperty","supportsDescriptors","enumerable","arePropertyDescriptorsSupported","object","predicate","writable","predicates","getOwnPropertySymbols","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","video","audio","payload","setUint32","set","track","audioobjecttype","samplingfrequencyindex","tracks","trackFragments","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","floor","durationPresent","sizePresent","flagsPresent","initSegment","fileType","movie","global","scope","self","Function","Timeout","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","isFunction","parseHeaders","xtend","initParams","uri","callback","createXHR","_createXHR","response","body","errorFunc","evt","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","nodeName","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","code","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","count","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","StreamTypes","handleRollover","probe","ts","aac","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","frame","pes","currentFrame","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","isLikelyAacData","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","TransportPacketStream","TransportParseStream","ElementaryStream","Stream","CaptionStream","TimestampRolloverStream","m2tsStreamTypes","bytesInBuffer","everything","trigger","flush","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","METADATA_STREAM_TYPE","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream","forceFlush","packetFlushable","packetData","ptsDtsFlags","packetLength","dataAlignmentIndicator","timelineStartInfo","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","Cea608Stream","MetadataStream","_extends","assign","_inheritsLoose","subClass","superClass","_assertThisInitialized","ReferenceError","listeners","_proto","listener","off","callbacks","dispose","pipe","destination","LineStream","_Stream","_this","nextNewline","substring","parseAttributes","attributes","attr","ParseStream","customParsers","tagMappers","_this2","acc","mapper","mappedLine","newLine","tagType","parseFloat","title","parseInt","number","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","toLowerCase","PRECISE","text","addParser","_ref","_this3","expression","customType","dataParser","addTagMapper","_ref2","Parser","lineStream","parseStream","currentMap","uris","currentUri","defaultMediaGroups","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","currentTimeline","manifest","allowCache","discontinuityStarts","entry","mediaGroup","rendition","allow-cache","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","playlist","stream-inf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","program-date-time","targetduration","targetDuration","totalduration","totalDuration","start","isNaN","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","timeline","comment","custom","chunk","classCallCheck","Constructor","createClass","descriptor","protoProps","staticProps","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","d","th","x2","x4","s","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","setPrototypeOf","inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","STEP","asyncStream_","decryptChunk_","padded","video_es_version","video_es__inheritsLoose","_setPrototypeOf","o","p","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","video_es__assertThisInitialized","_taggedTemplateLiteralLoose","strings","video_es_history","video_es_LogByTypeFactory","log","level","lvl","levels","lvlRegExp","window_default","video_es_log","createLogger","logByType","_len","subname","all","debug","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","each","video_es_assign","sources","isPlain","video_es_computedStyle","prop","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","createQuerier","context","ctx","video_es_createEl","tagName","properties","content","createElement","getOwnPropertyNames","propName","tsml_default","setAttribute","textContent","attrName","appendContent","innerText","prependTo","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","parentNode","rect","k","findPosition","docEl","clientLeft","scrollLeft","clientTop","scrollTop","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","buttons","$","$$","Dom","createEl","_guid","newGUID","elData","elIdAttr","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","passiveEvents","guid","handlersCopy","passive","attachEvent","removeType","t","elemData","ownerDocument","bubbles","targetData","one","func","any","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","uid","bound","video_es_throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","isEvented","eventBusEl_","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","string","mergeOptions","video_es_Component","Component","play","player_","parentComponent_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","keycode_default","isEventKey","focusIndex","focusableEls","focusableEls_","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","host","protocol","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","pathParts","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","WebVTT","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","video_es_loadTrack","crossOrigin","xhr_default","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","video_es_CloseButton","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","codes","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_PictureInPictureToggle","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","promise","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","video_es_set","reduceRight","video_es_get","_this8","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","navigationUI","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hookOnce","original","removeHook","video_es_style","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","writeable","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","baseURL","relativeURL","url_toolkit_default","buildAbsoluteURL","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","master","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","getPrototypeOf","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","mediaChange","started","intervalDuration","endSequence","expired","backward","backwardDuration","forwardDuration","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","segmentXhrHeaders","byterangeEnd","Range","textRange","range","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","flushSource","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalUnitType","currentGop","gops","nalCount","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","ONE_SECOND_IN_TS$1","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","trackDecodeInfo","maxSegmentDts","maxSegmentPts","keepOriginalTimestamps","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","reference","direction","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","frameStart","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","H264Stream","NalByteStream","header","returnSize","lowThree","middle","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","endDts","prependedContentDuration","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$2","parse$$1","mp4Inspector$$1","_byte","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","videoSegmentTimingInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","minimumUpdatePeriod","playlistUpdate","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","requestSidx_","sidxRange","finishProcessingFn","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","mp4_inspector_default","sidxMapping","sidxKey","sidxRequestFinished_","mpd_parser_es","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","masterXml","mediaGroupSidx","video_es_filterChangedSidxMappings","updatedMaster","mediaUri","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","keyBytes","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","segmentIndex","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","isEndOfStream_","endOfStream","startOfSegment","loadSegment_","appendedLastSegment","detectEndOfStream","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","segmentKey","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","emptyObject","isUndef","isTrue","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","toNumber","makeMap","expectsLowerCase","isBuiltInTag","isReservedAttribute","hasOwn","cached","camelizeRE","camelize","capitalize","hyphenateRE","hyphenate","boundFn","toArray","_from","toObject","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","silent","productionTip","devtools","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","bailRE","_isServer","hasProto","inWeex","WXEnvironment","platform","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","isFF","nativeWatch","watch","supportsPassive","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","ownKeys","Set","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","targetStack","pushTarget","popTarget","VNode","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","createEmptyVNode","createTextVNode","cloneVNode","cloned","arrayProto","arrayMethods","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","copyAugment","walk","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","setter","childOb","dependArray","newVal","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","dedupeHooks","mergeAssets","key$1","inject","computed","provide","defaultStrat","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","stringIndex","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","cur","errorCaptured","globalHandleError","invokeWithErrorHandling","_handled","logError","timerFunc","isUsingMicroTask","flushCallbacks","copies","MutationObserver","counter","observer","textNode","characterData","nextTick","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","createOnceHandler","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","_isVList","resolveInject","provideKey","_provided","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","bindObject","scopedSlotFn","$scopedSlots","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","prependModifier","symbol","installRenderHelpers","_o","_l","_t","_q","_m","_f","_k","_b","_v","_u","_g","_p","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","cloneAndMarkFunctionalResult","renderContext","mergeProps","componentVNodeHooks","hydrating","_isDestroyed","mountedNode","_isComponent","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","_directInactive","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","factory","errorComp","currentRenderingInstance","owners","loading","loadingComp","timerLoading","timerTimeout","$on","forceRender","renderCompleted","ensureCtor","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","extractPropsFromVNodeData","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","registerDeepBindings","_createElement","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","_hasHookEvent","$emit","waiting","flushing","currentFlushTimestamp","getNow","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","dirty","deps","newDeps","depIds","newDepIds","cleanupDeps","queueWatcher","oldValue","evaluate","teardown","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","getComponentName","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","initMixin","dataDef","propsDef","$set","$delete","stateMixin","hookRE","i$1","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","_render","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","mounted","configDef","delete","observable","installedPlugins","_installedPlugins","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","acceptValue","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","nodeOps","multiple","createElementNS","namespace","createComment","newNode","referenceNode","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","pushFilter","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","genComponentModel","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","updateDOMListeners","normalizeEvents","svgContainer","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","onEnd","transformRE","styles","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","toMs","enter","_leaveCb","cancelled","transition","_enterCb","appearClass","appearToClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","isRenderedModule","inVPre","childrenMatch","fullInvoke","isInitialPatch","isRealElement","oldElm","patchable","i$2","createPatchFunction","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","hasNoMatchingOption","actuallySetSelected","isMultiple","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","dx","dy","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","_reflow","propertyName","_hasMove","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","parseText","tagRE","tokenValue","rawTokens","@binding","klass$1","staticKeys","transformNode","classBinding","genData","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","template","isPreTag","root","currentParent","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","iteratorMatch","iterator1","iterator2","parseFor","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","_warn","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","ctrl","alt","genHandlers","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","dynamicProps","createFunction","createCompileToFunctionFn","compiled","fnGenErrors","baseCompile","finalOptions","tips","tip","compileToFunctions","getShouldDecode","idToTemplate","mount","outerHTML","getOuterHTML","prefixWithSilence","audioTsToVideoTs","ONE_SECOND_IN_TS","videoTsToAudioTs","trimAdtsFramesByEarliestDts","generateSampleTable","concatenateFrameData","u","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","esModule","swiperSlide","swiper","Swiper","f","globalOptions","slideClass","attached","wrapperClass","mountInstance","beforeDestroy","navigation","pagination","bindEvents","keysShim","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","char","$isNaN","g","eval","scrollSetting","","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","core","__e","AdtsStream","AacStream","aacUtils","modulo","remain","reviver","superCtor","TempCtor","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","concatenateNalData","process","getOwnPropertyDescriptors","descriptors","formatRegExp","objects","isNull","deprecate","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","recurseTimes","primitive","simple","formatPrimitive","visibleKeys","arrayToHash","formatError","isDate","braces","toUTCString","formatProperty","formatArray","numLinesEst","reduceToSingleString","ar","objectToString","pad","debuglog","NODE_ENV","NODE_DEBUG","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","regexp","isNullOrUndefined","isSymbol","isBuffer","months","getHours","getMinutes","getSeconds","getDate","getMonth","kCustomPromisifiedSymbol","callbackifyOnRejected","newReason","promisify","promiseResolve","promiseReject","callbackify","callbackified","maybeCb","rej","isCallable","thisArg","forEachString","forEachObject","alert","confirm","prompt","define","getPolyfill","shim","boundTrim","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","scriptExports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","origKeys","originalKeys","GetIntrinsic","$TypeError","$SyntaxError","Property Descriptor","ES","Desc","Type","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","recordType","argumentName","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","leftWhitespace","rightWhitespace","S","ToString","CheckObjectCoercible","copy","readUInt8","that","boundLength","boundArgs","Empty","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","basePartsForNormalise","parseURL","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","baseURLPath","newPath","getElementById","CustomEvent","Image","screen","Dom7","els","tempParent","toCreate","unique","uniqueArray","Methods","toggle","removeAttr","dom7ElementDataStorage","dataKey","elStyle","webkitTransform","webkitTransitionDuration","eventType","targetSelector","handleLiveEvent","eventData","dom7EventData","parents","handleEvent","event$1","dom7LiveListeners","proxyListener","dom7Listeners","dom7proxy","detail","cancelable","dataIndex","transitionEnd","fireCallBack","outerWidth","includeMargins","outerHeight","scrollY","scrollX","compareWith","webkitMatchesSelector","previousSibling","eq","returnIndex","tempDiv","prepend","nextElementSibling","nextAll","nextEls","previousElementSibling","prevAll","prevEls","find","foundElements","toAdd","methodName","testDiv","Utils","deleteProps","getTranslate","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","MozTransform","OTransform","MsTransform","msTransform","m41","m42","parseUrlQuery","urlToParse","paramsPart","len$1","nextSource","keysArray","nextIndex","nextKey","Support","touch","Modernizr","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","passiveListener","gestures","Browser","isSafari","isUiWebView","SwiperClass","eventsListeners","staticAccessors","f7proxy","eventHandler","useModulesParams","instanceParams","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","installModule","proto","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","slidesPerView","slidesPerColumnFill","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","centeredSlides","slidesPerGroup","effect","setWrapperSize","slidesGridItem","slidesGridItem$1","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","previousTranslate","transition$1","transitionStart","runCallbacks","autoHeight","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","setBreakpoint","freeMode","newTranslate","defaults","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideBlankClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","originalEvent","isTouchEvent","isTouched","isMoved","allowClick","currentX","targetTouches","currentY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","atan2","PI","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","clickTimeout","lastMoveEvent","velocityEvent","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","stopIndex","groupSize","onClick","detachEvents","breakpoint","getBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","innerWidth","wasLocked","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","complete","imagesLoaded","imagesToLoad","extendedDefaults","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","Resize","resize","orientationChangeHandler","WebkitMutationObserver","attach","ObserverFunc","mutations","observerUpdate","childList","observers","observeParents","containerParents","observeSlideChildren","Observer$1","Virtual","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","renderExternal","slidesToRender","prependIndexes","appendIndexes","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","Keyboard$1","Mousewheel","lastScrollTime","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","autoplayDisableOnInteraction","eventsTarged","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","nextEl","Pagination","paginationType","bullets","firstIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scaleX","scaleY","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","divider","moveDivider","setDragPosition","positionRatio","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Parallax","setTransform","currentOpacity","currentScale","parallax","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","in","touchX","touchY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","minIndex","Controller","LinearSpline","guess","i1","i3","binarySearch","interpolate","getInterpolateFunction","controller","spline","setTranslate$1","multiplier","controlledTranslate","controlled","control","setControlledTranslate","by","setControlledTransition","a11y","makeElFocusable","addElRole","addElLabel","disableEl","enableEl","onEnterKey","$targetEl","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","hashNavigation","paths","getPathValues","scrollToSlide","setHistoryPopState","pathArray","setHistory","slugify","includes","currentState","HashNavigation","onHashCange","newHash","setHash","watchState","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","offsetMultiplier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","toEdge","fromEdge","isHidden","bulletElement","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","dragClass","containerClass","zoomedSlideClass","doubleTap","loadOnTransitionStart","preloaderClass","scrollbarDragMove","notificationClass","paginationUpdate","disableOnInteraction","beforeTransitionStart","sliderFirstMove","slideChange","$Object","$String","assertRecord","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","IsPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","polyfill","searchInput","hasKeyCode","foundNamedKey","nameOrCode","backspace","pause/break","caps lock","page up","page down","home","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","⇧","⌥","⌃","⌘","ctl","break","caps","return","spc","spacebar","pgup","pgdn","ins","cmd","registerImmediate","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","MessageChannel","port1","port2","task","CoalesceStream","collectDtsInfo","calculateTrackBaseMediaDecodeTime","clearDtsInfo","$JSON","it","clean","sa","callee","ThrowTypeError","getProto","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","$ %decodeURIComponent%","$ %encodeURI%","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","$ %Promise_resolve%","$ %Proxy%","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","tryFunctionObject","strClass","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","merge","lists","urlToolkit","resolveUrl","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","startRange","endRange","segmentRange","_attributes$timescale","sourceDuration","NOW","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","periodDuration","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","sidxByteRange","sidxEnd","mediaReferences","mergeDiscontiguousPlaylists","_acc$name$segments","addSegmentInfoFromSidx","sidxMatch","formatVideoPlaylist","_ref3","_attributes3","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","mainPlaylist","formattedPlaylists","roleLabel","_attributes","formatAudioPlaylist","organizeAudioPlaylists","_attributes2","organizeVttPlaylists","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","segmentTime","nextS","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","UTCTimingNode","parseUTCTimingScheme","ES5internalSlots","O","actualHint","sessionStorage","newValue","store","read","[object Object]","allDelete"],"mappings":"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","file":"static/js/vendor.b42ccc827bf9dd9ea92f.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/polyfill.js\n// module id = +86n\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","/*!\n  * vue-router v3.0.6\n  * (c) 2019 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nfunction extend (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\nvar View = {\n  name: 'RouterView',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    // used by devtools to display a router-view badge\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      var vnodeData = parent.$vnode && parent.$vnode.data;\n      if (vnodeData) {\n        if (vnodeData.routerView) {\n          depth++;\n        }\n        if (vnodeData.keepAlive && parent._inactive) {\n          inactive = true;\n        }\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // register instance in init hook\n    // in case kept-alive component be actived when routes changed\n    data.hook.init = function (vnode) {\n      if (vnode.data.keepAlive &&\n        vnode.componentInstance &&\n        vnode.componentInstance !== matched.instances[name]\n      ) {\n        matched.instances[name] = vnode.componentInstance;\n      }\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'RouterLink',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n      ? 'router-link-active'\n      : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n      ? 'router-link-exact-active'\n      : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n      ? activeClassFallback\n      : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n      ? exactActiveClassFallback\n      : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('RouterView', View);\n  Vue.component('RouterLink', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  params = params || {};\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n\n    // Fix #2505 resolving asterisk routes { name: 'not-found', params: { pathMatch: '/not-found' }}\n    if (params.pathMatch) { params[0] = params.pathMatch; }\n\n    return filler(params, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  } finally {\n    // delete the 0 if it was added\n    delete params[0];\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next._normalized) {\n    return next\n  } else if (next.name) {\n    return extend({}, raw)\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = extend({}, next);\n    next._normalized = true;\n    var params = extend(extend({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\n/*  */\n\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n      ? originalRedirect(createRoute(record, location, null, router))\n      : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      // Fix #1994: using * with props: true generates a param named 0\n      params[key.name || 'pathMatch'] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  // Fix for #2195 Add optional third attribute to workaround a bug in safari https://bugs.webkit.org/show_bug.cgi?id=182678\n  window.history.replaceState({ key: getStateKey() }, '', window.location.href.replace(window.location.origin, ''));\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior.call(router, to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (\n    instances[key] &&\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\n  ) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\nvar HTML5History = /*@__PURE__*/(function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (supportsScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = decodeURI(window.location.pathname);\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\nvar HashHistory = /*@__PURE__*/(function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  // empty path\n  if (index < 0) { return '' }\n\n  href = href.slice(index + 1);\n  // decode the hash but not the search or hash\n  // as search(query) is already decoded\n  // https://github.com/vuejs/vue-router/issues/2708\n  var searchIndex = href.indexOf('?');\n  if (searchIndex < 0) {\n    var hashIndex = href.indexOf('#');\n    if (hashIndex > -1) { href = decodeURI(href.slice(0, hashIndex)) + href.slice(hashIndex); }\n    else { href = decodeURI(href); }\n  } else {\n    if (searchIndex > -1) { href = decodeURI(href.slice(0, searchIndex)) + href.slice(searchIndex); }\n  }\n\n  return href\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\nvar AbstractHistory = /*@__PURE__*/(function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\n\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // set up app destroyed handler\n  // https://github.com/vuejs/vue-router/issues/2639\n  app.$once('hook:destroyed', function () {\n    // clean out app from this.apps array once destroyed\n    var index = this$1.apps.indexOf(app);\n    if (index > -1) { this$1.apps.splice(index, 1); }\n    // ensure we still have a main app or null if no apps\n    // we do not release the router so it can be reused\n    if (this$1.app === app) { this$1.app = this$1.apps[0] || null; }\n  });\n\n  // main app previously initialized\n  // return as we don't need to set up new history listener\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  current = current || this.history.current;\n  var location = normalizeLocation(\n    to,\n    current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.6';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 0","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/define-properties/index.js\n// module id = /ymf\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 020U\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 162o\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 2BoW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 4cG2\n// module chunks = 0","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = null\n// module chunks = ","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = null\n// module chunks = ","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = null\n// module chunks = ","/**\n * @license\n * Video.js 7.6.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.0\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n\n    event.stopPropagation();\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {String} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector$$1 = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector$$1.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector$$1.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector$$1.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        if (updatedMaster) {\n          var sidxKey = generateSidxKey(_this8.media().sidx); // the sidx was updated, so the previous mapping was removed\n\n          if (!_this8.sidxMapping_[sidxKey]) {\n            var playlist = _this8.media();\n\n            _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n              handleManifestRedirects: _this8.handleManifestRedirects\n            }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n              if (!newMaster || !sidx) {\n                throw new Error('failed to request sidx on minimumUpdatePeriod');\n              } // update loader's sidxMapping with parsed sidx box\n\n\n              _this8.sidxMapping_[sidxKey].sidx = sidx;\n              _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                _this8.trigger('minimumUpdatePeriod');\n              }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n              _this8.refreshMedia_(_this8.media().uri);\n\n              return;\n            }));\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = null\n// module chunks = ","/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving the component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*(?:[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/audio-frame-utils.js\n// module id = 7DRH\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 7GJ1\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 7JOd\n// module chunks = 0","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"swiper/dist/js/swiper.js\")):\"function\"==typeof define&&define.amd?define(\"VueAwesomeSwiper\",[\"swiper\"],t):\"object\"==typeof exports?exports.VueAwesomeSwiper=t(require(\"swiper/dist/js/swiper.js\")):e.VueAwesomeSwiper=t(e.Swiper)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=4)}([function(t,n){t.exports=e},function(e,t){e.exports=function(e,t,n,i,s,r){var o,a=e=e||{},u=typeof e.default;\"object\"!==u&&\"function\"!==u||(o=e,a=e.default);var p=\"function\"==typeof a?a.options:a;t&&(p.render=t.render,p.staticRenderFns=t.staticRenderFns,p._compiled=!0),n&&(p.functional=!0),s&&(p._scopeId=s);var l;if(r?(l=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},p._ssrRegister=l):i&&(l=i),l){var c=p.functional,d=c?p.render:p.beforeCreate;c?(p._injectStyles=l,p.render=function(e,t){return l.call(t),d(e,t)}):p.beforeCreate=d?[].concat(d,l):[l]}return{esModule:o,exports:a,options:p}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(5),s=n.n(i),r=n(8),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(6),s=n.n(i),r=n(7),o=n(1),a=o(s.a,r.a,!1,null,null,null);t.default=a.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.swiperSlide=t.swiper=t.Swiper=void 0;var s=n(0),r=i(s),o=n(2),a=i(o),u=n(3),p=i(u),l=window.Swiper||r.default,c=p.default,d=a.default,f=function(e,t){t&&(p.default.props.globalOptions.default=function(){return t}),e.component(p.default.name,p.default),e.component(a.default.name,a.default)},h={Swiper:l,swiper:c,swiperSlide:d,install:f};t.default=h,t.Swiper=l,t.swiper=c,t.swiperSlide=d,t.install=f},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={name:\"swiper-slide\",data:function(){return{slideClass:\"swiper-slide\"}},ready:function(){this.update()},mounted:function(){this.update(),this.$parent&&this.$parent.options&&this.$parent.options.slideClass&&(this.slideClass=this.$parent.options.slideClass)},updated:function(){this.update()},attached:function(){this.update()},methods:{update:function(){this.$parent&&this.$parent.swiper&&this.$parent.update()}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(i),r=window.Swiper||s.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var s=arguments[i];if(null!=s)for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(n[r]=s[r])}return n},writable:!0,configurable:!0});var o=[\"beforeDestroy\",\"slideChange\",\"slideChangeTransitionStart\",\"slideChangeTransitionEnd\",\"slideNextTransitionStart\",\"slideNextTransitionEnd\",\"slidePrevTransitionStart\",\"slidePrevTransitionEnd\",\"transitionStart\",\"transitionEnd\",\"touchStart\",\"touchMove\",\"touchMoveOpposite\",\"sliderMove\",\"touchEnd\",\"click\",\"tap\",\"doubleTap\",\"imagesReady\",\"progress\",\"reachBeginning\",\"reachEnd\",\"fromEdge\",\"setTranslate\",\"setTransition\",\"resize\"];t.default={name:\"swiper\",props:{options:{type:Object,default:function(){return{}}},globalOptions:{type:Object,required:!1,default:function(){return{}}}},data:function(){return{swiper:null,classes:{wrapperClass:\"swiper-wrapper\"}}},ready:function(){this.swiper||this.mountInstance()},mounted:function(){if(!this.swiper){var e=!1;for(var t in this.classes)this.classes.hasOwnProperty(t)&&this.options[t]&&(e=!0,this.classes[t]=this.options[t]);e?this.$nextTick(this.mountInstance):this.mountInstance()}},activated:function(){this.update()},updated:function(){this.update()},beforeDestroy:function(){this.$nextTick(function(){this.swiper&&(this.swiper.destroy&&this.swiper.destroy(),delete this.swiper)})},methods:{update:function(){this.swiper&&(this.swiper.update&&this.swiper.update(),this.swiper.navigation&&this.swiper.navigation.update(),this.swiper.pagination&&this.swiper.pagination.render(),this.swiper.pagination&&this.swiper.pagination.update())},mountInstance:function(){var e=Object.assign({},this.globalOptions,this.options);this.swiper=new r(this.$el,e),this.bindEvents(),this.$emit(\"ready\",this.swiper)},bindEvents:function(){var e=this,t=this;o.forEach(function(n){e.swiper.on(n,function(){t.$emit.apply(t,[n].concat(Array.prototype.slice.call(arguments))),t.$emit.apply(t,[n.replace(/([A-Z])/g,\"-$1\").toLowerCase()].concat(Array.prototype.slice.call(arguments)))})})}}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"swiper-container\"},[e._t(\"parallax-bg\"),e._v(\" \"),n(\"div\",{class:e.classes.wrapperClass},[e._t(\"default\")],2),e._v(\" \"),e._t(\"pagination\"),e._v(\" \"),e._t(\"button-prev\"),e._v(\" \"),e._t(\"button-next\"),e._v(\" \"),e._t(\"scrollbar\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement;return(e._self._c||t)(\"div\",{class:e.slideClass},[e._t(\"default\")],2)},s=[],r={render:i,staticRenderFns:s};t.a=r}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-awesome-swiper/dist/vue-awesome-swiper.js\n// module id = 7QTg\n// module chunks = 0","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/implementation.js\n// module id = 7ciz\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isFinite.js\n// module id = 9+gG\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = FeBl\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = GJFR\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = GfXe\n// module chunks = 0","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/mod.js\n// module id = H1lJ\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inherits/inherits_browser.js\n// module id = LC74\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = MjOi\n// module chunks = 0","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isNaN.js\n// module id = No8i\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/util.js\n// module id = OMJi\n// module chunks = 0","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/index.js\n// module id = PiFy\n// module chunks = 0","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/utils.js\n// module id = SkH0\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/index.js\n// module id = TaKV\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = X4yv\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has/src/index.js\n// module id = XfW5\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/index.js\n// module id = bidq\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/assertRecord.js\n// module id = bvnS\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\n/* eslint-disable no-control-regex */\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n/* eslint-enable no-control-regex */\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/implementation.js\n// module id = eXcd\n// module chunks = 0","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/support/isBufferBrowser.js\n// module id = fC4T\n// module chunks = 0","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/implementation.js\n// module id = fRHV\n// module chunks = 0","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/helpers/isPrimitive.js\n// module id = fXO7\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = fYOu\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Swiper = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.3\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2019, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: February 11, 2019\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (swiper.params.breakpointsInverse) {\n        if (point <= win.innerWidth) {\n          breakpoint = point;\n        }\n      } else if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push('initialized');\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  /* eslint no-param-reassign: \"off\" */\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass ) Swiper.__proto__ = SwiperClass;\n    Swiper.prototype = Object.create( SwiperClass && SwiperClass.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.changeDirection = function changeDirection (newDirection, needUpdate) {\n      if ( needUpdate === void 0 ) needUpdate = true;\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n      if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n        return swiper;\n      }\n\n      if (currentDirection === 'vertical') {\n        swiper.$el\n          .removeClass(((swiper.params.containerModifierClass) + \"vertical wp8-vertical\"))\n          .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n        if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n          swiper.$el.addClass(((swiper.params.containerModifierClass) + \"wp8-\" + newDirection));\n        }\n      }\n      if (currentDirection === 'horizontal') {\n        swiper.$el\n          .removeClass(((swiper.params.containerModifierClass) + \"horizontal wp8-horizontal\"))\n          .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n        if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n          swiper.$el.addClass(((swiper.params.containerModifierClass) + \"wp8-\" + newDirection));\n        }\n      }\n\n      swiper.params.direction = newDirection;\n\n      swiper.slides.each(function (slideIndex, slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n\n      swiper.emit('changeDirection');\n      if (needUpdate) { swiper.update(); }\n\n      return swiper;\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.push(slides[i]); }\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.unshift(slides[i]); }\n        }\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) { return; }\n      var activeIndex = swiper.activeIndex;\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n          if (slidesIndexes[i] < activeIndex) { activeIndex -= 1; }\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n        if (slidesIndexes < activeIndex) { activeIndex -= 1; }\n        activeIndex = Math.max(activeIndex, 0);\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          removeSlide: Virtual.removeSlide.bind(swiper),\n          removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          var isHidden;\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            swiper.emit('navigationShow', swiper);\n          } else {\n            swiper.emit('navigationHide', swiper);\n          }\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n          if (isHidden === true) {\n            swiper.emit('paginationShow', swiper);\n          } else {\n            swiper.emit('paginationHide', swiper);\n          }\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.js\n// module id = gsqX\n// module chunks = 0","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/es5.js\n// module id = i7Em\n// module chunks = 0","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, {\n\t\ttrim: function testTrim() {\n\t\t\treturn String.prototype.trim !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/shim.js\n// module id = ilki\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/keycode/index.js\n// module id = ljAp\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/json/stringify.js\n// module id = mvHQ\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = mypn\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = nAZl\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/json/stringify.js\n// module id = qkKv\n// module chunks = 0","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/isArguments.js\n// module id = t+1C\n// module chunks = 0","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/GetIntrinsic.js\n// module id = teQR\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/es5.js\n// module id = wSG+\n// module chunks = 0","!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)(\"object\"==typeof exports?exports:e)[o]=n[o]}}(window,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/lib\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t);let o=localStorage.setItem;function r(e){const t=localStorage.getItem(e),n=sessionStorage.getItem(e);return t||n?t||(n||void 0):(data[e]=\"name repeat\",{data:()=>data})}localStorage.setItem=function(e,t){let n=new Event(\"setItemEvent\");n.key=e,n.newValue=t,window.dispatchEvent(n),o.apply(this,arguments)};let a={install:function(e,t){let n={};for(let e in t)if(localStorage.getItem(t[e].name)||sessionStorage.getItem(t[e].name))n[t[e].name]=\"name repeat\";else{if(t[e].type)sessionStorage.setItem(t[e].name,JSON.stringify(t[e].store));else{if(localStorage.getItem(t[e].name))return void(n[t[e].name]=\"name repeat\");localStorage.setItem(t[e].name,JSON.stringify(t[e].store))}n[t[e].name]=\"ok\"}},read:function(e){const t=localStorage.getItem(e);sessionStorage.getItem(e);let n={};n[e]=JSON.parse(r(e));let o={};return o[e]={handler(n,o){t?localStorage.setItem(e,JSON.stringify(n)):sessionStorage.setItem(e,JSON.stringify(n))},deep:!0},{data:()=>n,mounted(){window.addEventListener(\"storage\",t=>{t.key==e&&(this[e]=JSON.parse(t.newValue))}),window.addEventListener(\"setItemEvent\",t=>{t.key==e&&t.newValue!=r(e)&&(this[e]=JSON.parse(t.newValue))})},watch:o}},delete:function(e){for(let t in e)localStorage.removeItem(e[t]),sessionStorage.removeItem(e[t])},allDelete:function(e){!0!==e?!1!==e?(sessionStorage.clear(),localStorage.clear()):localStorage.clear():sessionStorage.clear()}};t.default=a}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-amx/lib/axm.umd.min.js\n// module id = wlN0\n// module chunks = 0","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/sign.js\n// module id = xeqp\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = zGuD\n// module chunks = 0"],"sourceRoot":""}